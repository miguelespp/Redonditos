CREATE TABLE "User" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "username" VARCHAR UNIQUE NOT NULL,
  "email" VARCHAR UNIQUE NOT NULL,
  "password_hash" VARCHAR NOT NULL,
  "password_salt" VARCHAR NOT NULL,
  "firstname" VARCHAR NOT NULL,
  "surname" VARCHAR NOT NULL,
  "birth_date" DATE NOT NULL,
  "address" VARCHAR NOT NULL,
  "mobile_phone" VARCHAR UNIQUE NOT NULL,
  "gender_id" INTEGER NOT NULL,
  "role_id" INTEGER NOT NULL
);

CREATE TABLE "UserRole" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Gender" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Author" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR NOT NULL,
  "birth_date" DATE NOT NULL,
  "death_date" DATE,
  "bio" VARCHAR,
  "gender_id" INTEGER NOT NULL,
  "country_id" INTEGER NOT NULL
);

CREATE TABLE "Country" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Language" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Document" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "title" VARCHAR NOT NULL,
  "isbn" VARCHAR NOT NULL,
  "description" VARCHAR,
  "cover_url" VARCHAR,
  "publication_date" DATE,
  "acquisition_date" DATE,
  "edition" INTEGER,
  "total_pages" INTEGER,
  "external_lend_allowed" BOOLEAN,
  "base_price" FLOAT,
  "total_copies" INTEGER NOT NULL,
  "available_copies" INTEGER NOT NULL,
  "avg_rating" FLOAT,
  "language_id" INTEGER NOT NULL,
  "format_id" INTEGER NOT NULL,
  "publisher_id" INTEGER NOT NULL
);

CREATE TABLE "DocumentFormat" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL,
  "lend_period" INTEGER NOT NULL
);

CREATE TABLE "Genre" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Tag" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Publisher" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR NOT NULL,
  "site_url" VARCHAR,
  "logo_url" VARCHAR
);

CREATE TABLE "Order" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "order_date" DATE NOT NULL,
  "max_return_date" DATE NOT NULL,
  "user_id" INTEGER NOT NULL
);

CREATE TABLE "OrderStatus" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "name" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "Review" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "content" VARCHAR NOT NULL,
  "rating" INTEGER NOT NULL,
  "create_date" DATE NOT NULL,
  "update_date" DATE,
  "spoiler" BOOLEAN NOT NULL,
  "user_id" INTEGER NOT NULL,
  "document_id" INTEGER NOT NULL
);

CREATE TABLE "List" (
  "id" SERIAL PRIMARY KEY NOT NULL,
  "title" VARCHAR NOT NULL,
  "description" VARCHAR,
  "user_id" INTEGER NOT NULL,
  "private" BOOLEAN NOT NULL
);

CREATE TABLE "Author_Document" (
  "author_id" INTEGER NOT NULL,
  "document_id" INTEGER NOT NULL
);

CREATE TABLE "Genre_Document" (
  "document_id" INTEGER NOT NULL,
  "genre_id" INTEGER NOT NULL
);

CREATE TABLE "Tag_Document" (
  "tag_id" INTEGER NOT NULL,
  "document_id" INTEGER NOT NULL
);

CREATE TABLE "Order_Document" (
  "order_id" INTEGER NOT NULL,
  "document_id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "pick_up_date" DATE NOT NULL,
  "actual_return_date" DATE,
  "status_id" INTEGER NOT NULL
);

CREATE TABLE "List_Document" (
  "list_id" INTEGER NOT NULL,
  "document_id" INTEGER NOT NULL
);

ALTER TABLE "User" ADD CONSTRAINT "user_gender_id_foreign" FOREIGN KEY ("gender_id") REFERENCES "Gender" ("id");

ALTER TABLE "User" ADD CONSTRAINT "user_role_id_foreign" FOREIGN KEY ("role_id") REFERENCES "UserRole" ("id");

ALTER TABLE "Author" ADD CONSTRAINT "author_gender_id_foreign" FOREIGN KEY ("gender_id") REFERENCES "Gender" ("id");

ALTER TABLE "Author" ADD CONSTRAINT "author_country_id_foreign" FOREIGN KEY ("country_id") REFERENCES "Country" ("id");

ALTER TABLE "Document" ADD CONSTRAINT "document_language_id_foreign" FOREIGN KEY ("language_id") REFERENCES "Language" ("id");

ALTER TABLE "Document" ADD CONSTRAINT "document_format_id_foreign" FOREIGN KEY ("format_id") REFERENCES "DocumentFormat" ("id");

ALTER TABLE "Document" ADD CONSTRAINT "document_publisher_id_foreign" FOREIGN KEY ("publisher_id") REFERENCES "Publisher" ("id");

ALTER TABLE "Review" ADD CONSTRAINT "review_user_id_foreign" FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Review" ADD CONSTRAINT "review_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");

ALTER TABLE "Order" ADD CONSTRAINT "order_user_id_foreign" FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Order_Document" ADD CONSTRAINT "order_document_status_id_foreign" FOREIGN KEY ("status_id") REFERENCES "OrderStatus" ("id");

ALTER TABLE "Order_Document" ADD CONSTRAINT "order_document_order_id_foreign" FOREIGN KEY ("order_id") REFERENCES "Order" ("id");

ALTER TABLE "Order_Document" ADD CONSTRAINT "order_document_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");

ALTER TABLE "List" ADD CONSTRAINT "list_user_id_foreign" FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Author_Document" ADD CONSTRAINT "author_document_author_id_foreign" FOREIGN KEY ("author_id") REFERENCES "Author" ("id");

ALTER TABLE "Author_Document" ADD CONSTRAINT "author_document_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");

ALTER TABLE "Genre_Document" ADD CONSTRAINT "genre_document_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");

ALTER TABLE "Genre_Document" ADD CONSTRAINT "genre_document_genre_id_foreign" FOREIGN KEY ("genre_id") REFERENCES "Genre" ("id");

ALTER TABLE "Tag_Document" ADD CONSTRAINT "tag_document_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");

ALTER TABLE "Tag_Document" ADD CONSTRAINT "tag_document_tag_id_foreign" FOREIGN KEY ("tag_id") REFERENCES "Tag" ("id");

ALTER TABLE "List_Document" ADD CONSTRAINT "list_document_list_id_foreign" FOREIGN KEY ("list_id") REFERENCES "List" ("id");

ALTER TABLE "List_Document" ADD CONSTRAINT "list_document_document_id_foreign" FOREIGN KEY ("document_id") REFERENCES "Document" ("id");